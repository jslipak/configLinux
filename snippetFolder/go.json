{"hashCheckPass":{"prefix":"hashCheckPass","body":["func CheckPasswordHash(password, hashedPassword string) bool {","\terr := bcrypt.CompareHashAndPassword([]byte(password), []byte(hashedPassword))","\treturn err == nil","}"]},"err!JSON":{"prefix":"err!JSON","body":["if err != nil {","\tcontext.JSON(http.StatusInternalServerError, gin.H{\"message\": \"Could not ${1:what}.\"})","\treturn","}"]},"c.json":{"prefix":"c.json","body":"context.JSON(http.Status${1:which status}, gin.H{\"message\": \"successful ${2:Info}\"})"},"hashPass":{"prefix":"hashPass","body":["func HashPassword(password string) (string, error) {","\tbytes, err := bcrypt.GenerateFromPassword([]byte(password), ${1:complex:15})","\treturn string(bytes), err","}"]},"err!":{"prefix":"err!","body":["if err != nil {","\treturn err","}"]},"err!parse":{"prefix":"err!parse","body":["if err != nil {","\tcontext.JSON(http.StatusBadRequest, gin.H{\"message\": \"Could not parse request data.\"})","\treturn","}"]}}